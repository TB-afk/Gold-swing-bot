import streamlit as st
import pandas as pd
import yfinance as yf
from sklearn.ensemble 
import 
RandomForestClassifier

st.set_page_config(page_title="Gold Swing Bot", page_icon="๐")
st.title("๐ Gold Swing Bot")
st.write("ูุธุงู ุฐูู ูุชููุน ุญุฑูุฉ ุงูุฐูุจ ุจูุงุกู ุนูู ููุงุฐุฌ ุชุญููููุฉ.")

# ุชุญููู ุจูุงูุงุช ุงูุฐูุจ (ุจุฏูู ุฅุธูุงุฑ ุงูุชูุงุตูู)
data = yf.download("XAUUSD=X", period="60d", interval="1d")

# ุฅูุดุงุก ุงููุฏู
data['Target'] = data['Close'].shift(-1) > data['Close']
data.dropna(inplace=True)

# ุชุฌููุฒ ุงููุฏุฎูุงุช ูููููุฐุฌ (ูุฎูู ุงูุชูุงุตูู)
features = ['Open', 'High', 'Low', 'Close', 'Volume']
X = data[features].dropna()
y = data['Target'].loc[X.index]

# ุชุฏุฑูุจ ูููุฐุฌ ุงูุชููุน (ุจุฏูู ุฐูุฑ ุงุณูู)
model = RandomForestClassifier()
model.fit(X, y)

# ุงุณุชุฎุฏุงู ุขุฎุฑ ุจูุงูุงุช ููุชููุน
latest_data = X.iloc[-1:]
prediction = model.predict(latest_data)[0]

# ุนุฑุถ ุงููุชูุฌุฉ ููุท
st.subheader("๐ฎ ุงูุชููุน:")
if prediction:
    st.success("๐ ูู ุงููุชููุน ุตุนูุฏ ุงูุฐูุจ ุฎูุงู ุงูููู ุงููุงุฏู.")
else:
    st.error("๐ ูู ุงููุชููุน ูุจูุท ุงูุฐูุจ ุฎูุงู ุงูููู ุงููุงุฏู.")

# ุจุฏูู ุนุฑุถ ุงูุฑุณู ุงูุจูุงูู ููุง ุงูููุฏ ููุง ุงููุตุฏุฑ
st.caption("ุฌููุน ุงูุญููู ูุญููุธุฉ ยฉ 2025")